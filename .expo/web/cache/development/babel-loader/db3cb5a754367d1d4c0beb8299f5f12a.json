{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nexport var pokeAPI = {\n  getPokemons: function getPokemons() {\n    var response;\n    return _regeneratorRuntime.async(function getPokemons$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"https://pokeapi.co/api/v2/pokemon?limit=10\"));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data.results);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"names":["axios","pokeAPI","getPokemons","get","response","data","results"],"sources":["D:/1. рабочий стол диск C/учеба/мобилки/lab3/творим/my-app/services/pokeAPI.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { PokemonShortInfo } from \"../types/Pokemon\";\r\n\r\nexport const pokeAPI = {\r\n  getPokemons: async (): Promise<PokemonShortInfo[]> => {\r\n    const response = await axios.get(\r\n      \"https://pokeapi.co/api/v2/pokemon?limit=10\"\r\n    );\r\n\r\n    return response.data.results;\r\n  },\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,OAAO,GAAG;EACrBC,WAAW,EAAE;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACYF,KAAK,CAACG,GAAN,CACrB,4CADqB,CADZ;;UAAA;YACLC,QADK;YAAA,iCAKJA,QAAQ,CAACC,IAAT,CAAcC,OALV;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;AADQ,CAAhB"},"metadata":{},"sourceType":"module"}